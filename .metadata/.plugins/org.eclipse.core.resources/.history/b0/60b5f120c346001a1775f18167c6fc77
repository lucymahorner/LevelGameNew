package levelPieces;

import java.util.ArrayList;

import gameEngine.Drawable;
import gameEngine.Moveable;

public class LevelEngine {
	
	private int levelNum;
	private ArrayList<Moveable> movingPieces = new ArrayList<Moveable>();
	private Drawable[] drawablePieces = new Drawable[21];
	private ArrayList<GamePiece> interactingPieces = new ArrayList<GamePiece>();
	
	public void createLevel(int levelNum) {
		this.levelNum = levelNum;
		Minion m = new Minion('M',20);
		Doormat d = new Doormat();
		Unicorn u = new Unicorn('U',7);
		Unicorn un = new Unicorn('U',10);
		Winner z = new Winner('Z', 18);
		Sniper s = new Sniper('S', 9);
		BumbleBee b = new BumbleBee('B', 12);

		movingPieces.add(m);
		movingPieces.add(u);
		drawablePieces[7] = u;
		drawablePieces[20] = m;
		drawablePieces[5] = d;
		drawablePieces[18] = z;
		drawablePieces[9] = s;
		drawablePieces[12] = b;
		interactingPieces.add(u);
		interactingPieces.add(s);
		interactingPieces.add(z);
		interactingPieces.add(b);
		interactingPieces.add(m);
		interactingPieces.add(un);
	}
	// request data structures from LevelEngine
	// returns the board and the pieces that show up on the board
	public Drawable [] getBoard(int size) {
		updateBoard();
		return drawablePieces;
	}
	public void updateBoard(){
		for(Moveable m: movingPieces){
			GamePiece movingPieces = (GamePiece) m;
			drawablePieces[movingPieces.getLocation()] = m;
			movingPieces.draw();
			System.out.println(movingPieces.getLocation());
		}
	}
	// returns a list of the Moveable pieces for use outside of the board
	public ArrayList<Moveable> getMovingPieces(){
		return movingPieces;
	}
	public ArrayList<GamePiece> getInteractingPieces(){
		return interactingPieces;
	}
	// reset player statistics, starting location determined
	// by level engine
	public int getPlayerStartLoc() {
		return 0;
	}
}